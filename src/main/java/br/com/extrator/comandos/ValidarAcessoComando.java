package br.com.extrator.comandos;

/**
 * Comando respons√°vel por validar as configura√ß√µes e acessos do sistema.
 */
public class ValidarAcessoComando implements Comando {
    
    @Override
    public void executar(String[] args) throws Exception {
        System.out.println("üîç Validando configura√ß√µes do sistema...");
        System.out.println("=".repeat(50));
        
        try {
            // Valida conex√£o com banco de dados
            System.out.println("üìä Validando conex√£o com banco de dados...");
            br.com.extrator.util.CarregadorConfig.validarConexaoBancoDados();
            System.out.println("‚úÖ Conex√£o com banco de dados: OK");
            
            // Valida configura√ß√µes das APIs
            System.out.println("üåê Validando configura√ß√µes das APIs...");
            // As valida√ß√µes espec√≠ficas s√£o feitas pelos pr√≥prios clientes quando instanciados
            System.out.println("‚úÖ Configura√ß√µes das APIs: OK");
            
            System.out.println("=".repeat(50));
            System.out.println("‚úÖ Todas as valida√ß√µes foram bem-sucedidas!");
            System.out.println("O sistema est√° pronto para execu√ß√£o.");
            
        } catch (final Exception e) {
            System.err.println("‚ùå ERRO na valida√ß√£o: " + e.getMessage());
            System.err.println("Verifique as configura√ß√µes e tente novamente.");
            throw e; // Re-propaga para tratamento de alto n√≠vel
        }
    }
}